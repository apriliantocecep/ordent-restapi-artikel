basePath: /
definitions:
  models.Article:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  request.ArticleRequest:
    properties:
      body:
        type: string
      title:
        type: string
    required:
    - body
    - title
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  response.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  response.RegisterResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: cecepaprilianto@gmail.com
    name: Cecep Aprilianto
    url: https://apriliantocecep.github.io
  description: Article Online API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ordent Article Online API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: get home welcome response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: get home
      tags:
      - home
  /article:
    get:
      consumes:
      - application/json
      description: get all article
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Article'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: get articles
      tags:
      - article
    post:
      consumes:
      - application/json
      description: create new article
      parameters:
      - description: article request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: new article
      tags:
      - article
  /article/{id}:
    delete:
      consumes:
      - application/json
      description: delete a article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: delete article
      tags:
      - article
    get:
      consumes:
      - application/json
      description: get a article by id
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: show article
      tags:
      - article
    put:
      consumes:
      - application/json
      description: update a article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: article request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: update article
      tags:
      - article
  /login:
    post:
      consumes:
      - application/json
      description: login a user using email and password
      parameters:
      - description: login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: register a user
      parameters:
      - description: register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: register user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
